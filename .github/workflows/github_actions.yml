name: Build, Test, Deploy to AWS
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: run unit Tests with pytest
        run: |
          pip install pytest
          pytest -s -vvv ./tests/unit/
      - name: Run integration tests
        run: |
          pytest -s -vvv ./tests/integration/
      - name: SAM Validate
        run: |
          sam validate
      - name: SAM Build
        run: |
          sam build
  test: 
    runs-on: ubuntu-latest
    steps:
      - name: copy test scripts to ReadAPI server
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ftp.xxxxx.com
          port: 21
          protocol: ftp #ftps|sftp
          local-dir: ./poc/tests/
          server-dir: ./opt/ReadyAPI/project1
          username: myFtpUserName
          password: ${{ secrets.ftp_password }}
      - name: Run Functional Test Cases
        run: |
          /opt/SmartBear/ReadyAPI/bin/testrunner.bat -FPDF -f/opt/test-reports/ -R"Project Report" /opt/poc/tests/functional/sample_readyapi_project.xml
      - name: Run Security Test Cases
        run: |
          /opt/SmartBear/ReadyAPI/bin/securitytestrunner.bat -FPDF -f/opt/test-reports/ -R"Project Report" /opt/poc/tests/security/sample_readyapi_project.xml
      - name: Run Perfomance Test Cases
        run: |
          /opt/SmartBear/ReadyAPI/bin/loadtestrunner.bat -L600:0:0 -FPDF "-rc:/opt/test-reports/" "/opt/poc/tests/load/sample_readyapi_project.xml" -nMassLoad1
  deploy-dev:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.DEV_AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.DEV_AWS_REGION }}
      - name: SAM Deploy
        run: |
          sam deploy --template-file template.yaml \
            --stack-name sample-api-stack \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
  deploy-stage: 
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGE_AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.STAGE_AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.STAGE_AWS_REGION }}
      - name: SAM Deploy
        run: |
          sam deploy --template-file template.yaml \
            --stack-name sample-api-stack \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
  deploy-prod:
    if: github.event.ref == 'refs/heads/main' #deploy only if main branch
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.PROD_AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.PROD_AWS_REGION }}
      - name: SAM Deploy
        run: |
          sam deploy --template-file template.yaml \
            --stack-name sample-api-stack \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
